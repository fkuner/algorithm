#include <iostream>
#include <cmath>
using namespace std;
int max(int a,int b)
{
    return a>b?a:b;
}

int main()
{
    int a1,a2,a3,a4,a5,a6;
    
    while(scanf("%d%d%d%d%d%d",&a1,&a2,&a3,&a4,&a5,&a6)!=EOF)
    {
        if(a1==0 && a2==0 && a3==0 && a4==0 && a5==0 &&a6==0)
            break;
        int ans=0;
        //先包装6*6
        ans+=a6;
        //包装5*5，剩余11个1*1
        ans+=a5;
        a1=max(0,a1-a5*11);
        //包装4*4，剩余5个2*2或者20个1*1
        ans+=a4;
        if(a2>=5*a4)
            a2-=a4*5;
        else
        {
            a1=max(0,a1-20*a4+4*a2);
            a2=0;
        }
        //包装3*3,
        ans+=(a3+3)/4;
        a3%=4;
        if(a3)
        {
            
            if(a2>=7-2*a3)       //其中i={1,2,3} ; j={5,3,1}  由此可得到条件的关系式
			{
				a2-=7-2*a3;
				a1=max(0,a1-(8-a3));  //当箱子放了i个3*3盒子，并尽可能多地放了个2*2盒子后
			}                         //剩下的空间最多放j个1*1盒子，其中i={1,2,3} ; j={7,6,5}
			else                //但当2*2的盒子数不足时，尽可能把1*1盒子放入剩余空间
			{  //一个箱子最多放36个1*1，一个3*3盒子空间最多放9个1*1，一个2*2盒子空间最多放4个1*1
				a1=max(0,a1-(36-9*a3-4*a2));    //由此很容易推出剩余空间能放多少个1*1
				a2=0;
			}
        }
        //包装2*2
        ans+=(a2+8)/9;
        a2%=9;
        if(a2)
        {
            a1=max(0,a1-(36-4*a2));
        }
        //包装1*1
        ans+=(a1+35)/36;

        cout<<ans<<endl;
    }
    return 1;
}
